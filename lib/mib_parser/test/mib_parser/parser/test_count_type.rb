require 'minitest_helper'

class TestParserCountType < Minitest::Test
  def test_br_scan_count_type
    oid = MIBParser::ObjectId.new('1.3.6.1.4.1.2435.2.3.9.4.2.1.5.5.54.2.2.1.2.1')
    parser = MIBParser::Parser::CountType.new(oid)
    assert_equal 'Total_Pages_Scanned_ADF_1sided', parser.parse('1')
    assert_equal 'Total_Pages_Scanned_Flatbed', parser.parse('2')
    assert_equal 'Total_Pages_Scanned_ADF_2sided', parser.parse('3')
  end

  def test_br_print_pages_func_type
    oid = MIBParser::ObjectId.new('1.3.6.1.4.1.2435.2.3.9.4.2.1.5.5.52.21.1.2.1')
    parser = MIBParser::Parser::CountType.new(oid)
    assert_equal 'Total_Pages_Printed_PC_Print', parser.parse('1')
    assert_equal 'Total_Pages_Printed_Fax_List', parser.parse('2')
    assert_equal 'Total_Pages_Printed_Copy', parser.parse('3')
    assert_equal 'Total_Pages_Printed_Color_Copy', parser.parse('4')
    assert_equal 'Total_Pages_Printed_Color_PC_Print', parser.parse('5')
    assert_equal 'Total_Pages_Printed_Color_Fax_List', parser.parse('6')
    assert_equal 'Total_Pages_Printed_Monochrome_PC_Print', parser.parse('7')
    assert_equal 'Total_Pages_Printed_Monochrome_Fax_List', parser.parse('8')
    assert_equal 'Total_Pages_Printed_Monochrome_Copy', parser.parse('9')
    assert_equal 'Total_Pages_Printed_Media', parser.parse('10')
  end

  def test_br_print_pages_paper_size
    oid = MIBParser::ObjectId.new('1.3.6.1.4.1.2435.2.3.9.4.2.1.5.5.52.1.1.2.1')
    parser = MIBParser::Parser::CountType.new(oid)
    assert_equal 'Print_Page_Count_Executive', parser.parse('1')
    assert_equal 'Print_Page_Count_Letter', parser.parse('2')
    assert_equal 'Print_Page_Count_Legal', parser.parse('3')
    assert_equal 'Print_Page_Count_A6', parser.parse('24')
    assert_equal 'Print_Page_Count_A5A5L', parser.parse('25')
    assert_equal 'Print_Page_Count_A4', parser.parse('26')
    assert_equal 'Print_Page_Count_A3ISO', parser.parse('27')
    assert_equal 'Print_Page_Count_B5JIS', parser.parse('45')
    assert_equal 'Print_Page_Count_B4JIS', parser.parse('46')
    assert_equal 'Print_Page_Count_Monarch', parser.parse('80')
    assert_equal 'Print_Page_Count_Com10', parser.parse('81')
    assert_equal 'Print_Page_Count_Dl', parser.parse('90')
    assert_equal 'Print_Page_Count_C5', parser.parse('91')
    assert_equal 'Print_Page_Count_B6', parser.parse('99')
    assert_equal 'Print_Page_Count_B5', parser.parse('100')
    assert_equal 'Print_Page_Count_Ledger', parser.parse('890')
    assert_equal 'Print_Page_Count_A3PLUS', parser.parse('891')
    assert_equal 'Print_Page_Count_LetterShortEdge', parser.parse('892')
    assert_equal 'Print_Page_Count_A4ShortEdge', parser.parse('893')
    assert_equal 'Print_Page_Count_A4LONG', parser.parse('894')
    assert_equal 'Print_Page_Count_ExecutiveShortEdge', parser.parse('895')
    assert_equal 'Print_Page_Count_B5ISOShortEdge', parser.parse('896')
    assert_equal 'Print_Page_Count_Custom', parser.parse('897')
    assert_equal 'Print_Page_Count_A4Letter', parser.parse('898')
    assert_equal 'Print_Page_Count_B5Executive', parser.parse('899')
    assert_equal 'Print_Page_Count_Envelopes', parser.parse('900')
    assert_equal 'Print_Page_Count_Dll', parser.parse('901')
    assert_equal 'Print_Page_Count_Postcard', parser.parse('902')
    assert_equal 'Print_Page_Count_Folio', parser.parse('903')
    assert_equal 'Print_Page_Count_OrganaizerJ', parser.parse('904')
    assert_equal 'Print_Page_Count_OrganaizerK', parser.parse('905')
    assert_equal 'Print_Page_Count_OrganaizerL', parser.parse('906')
    assert_equal 'Print_Page_Count_OrganaizerM', parser.parse('907')
    assert_equal 'Print_Page_Count_Userdefined', parser.parse('908')
    assert_equal 'Print_Page_Count_LegalFolio', parser.parse('909')
    assert_equal 'Print_Page_Count_B6A5A6', parser.parse('910')
    assert_equal 'Print_Page_Count_A5L', parser.parse('923')
    assert_equal 'Print_Page_Count_B6JIS', parser.parse('924')
    assert_equal 'Print_Page_Count_OtherPage', parser.parse('999')
    assert_equal 'Print_Page_Count_Nocasset', parser.parse('1000')
    assert_equal 'Print_Page_Count_A3ledgermono', parser.parse('700')
    assert_equal 'Print_Page_Count_A3ledgercolor', parser.parse('701')
    assert_equal 'Print_Page_Count_Othersizemono', parser.parse('702')
    assert_equal 'Print_Page_Count_Othersizecolor', parser.parse('703')
  end

  def test_br_print_pages_classified_sx_dx_papersize
    oid = MIBParser::ObjectId.new('1.3.6.1.4.1.2435.2.3.9.4.2.1.5.5.52.2.1.2.1')
    parser = MIBParser::Parser::CountType.new(oid)
    assert_equal 'Print_Page_SxDx_Count_A5B5', parser.parse('706')
    assert_equal 'Print_Page_SxDx_Count_LegalB4', parser.parse('709')
    assert_equal 'Print_Page_SxDx_Count_A4Letter', parser.parse('898')
    assert_equal 'Print_Page_SxDx_Count_A3Ledger', parser.parse('912')
    assert_equal 'Print_Page_SxDx_Count_4x6Postcard', parser.parse('913')
    assert_equal 'Print_Page_SxDx_Count_Other', parser.parse('999')
  end

  def test_br_print_pages_classified_sx_papersize
    oid = MIBParser::ObjectId.new('1.3.6.1.4.1.2435.2.3.9.4.2.1.5.5.52.3.1.2.1')
    parser = MIBParser::Parser::CountType.new(oid)
    assert_equal 'Print_Page_Sx_Count_A3LedgerMono', parser.parse('700')
    assert_equal 'Print_Page_Sx_Count_A3LedgerColor', parser.parse('701')
    assert_equal 'Print_Page_Sx_Count_OtherSizeMono', parser.parse('702')
    assert_equal 'Print_Page_Sx_Count_OtherSizeColor', parser.parse('703')
    assert_equal 'Print_Page_Sx_Count_A4LetterMono', parser.parse('704')
    assert_equal 'Print_Page_Sx_Count_A4LetterColor', parser.parse('705')
    assert_equal 'Print_Page_Sx_Count_A5B5', parser.parse('706')
    assert_equal 'Print_Page_Sx_Count_A5B5Mono', parser.parse('707')
    assert_equal 'Print_Page_Sx_Count_A5B5Color', parser.parse('708')
    assert_equal 'Print_Page_Sx_Count_LegalB4', parser.parse('709')
    assert_equal 'Print_Page_Sx_Count_LegalB4Mono', parser.parse('710')
    assert_equal 'Print_Page_Sx_Count_LegalB4Color', parser.parse('711')
    assert_equal 'Print_Page_Sx_Count_4x6PostcardMono', parser.parse('712')
    assert_equal 'Print_Page_Sx_Count_4x6PostcardColor', parser.parse('713')
    assert_equal 'Print_Page_Sx_Count_A4Letter', parser.parse('898')
    assert_equal 'Print_Page_Sx_Count_A3Ledger', parser.parse('912')
    assert_equal 'Print_Page_Sx_Count_4x6Postcard', parser.parse('913')
    assert_equal 'Print_Page_Sx_Count_Other', parser.parse('999')
  end

  def test_br_print_pages_classified_dx_papersize
    oid = MIBParser::ObjectId.new('1.3.6.1.4.1.2435.2.3.9.4.2.1.5.5.52.4.1.2.1')
    parser = MIBParser::Parser::CountType.new(oid)
    assert_equal 'Print_Page_Dx_Count_A3LedgerMono', parser.parse('700')
    assert_equal 'Print_Page_Dx_Count_A3LedgerColor', parser.parse('701')
    assert_equal 'Print_Page_Dx_Count_OtherSizeMono', parser.parse('702')
    assert_equal 'Print_Page_Dx_Count_OtherSizeColor', parser.parse('703')
    assert_equal 'Print_Page_Dx_Count_A4LetterMono', parser.parse('704')
    assert_equal 'Print_Page_Dx_Count_A4LetterColor', parser.parse('705')
    assert_equal 'Print_Page_Dx_Count_A5B5', parser.parse('706')
    assert_equal 'Print_Page_Dx_Count_A5B5Mono', parser.parse('707')
    assert_equal 'Print_Page_Dx_Count_A5B5Color', parser.parse('708')
    assert_equal 'Print_Page_Dx_Count_LegalB4', parser.parse('709')
    assert_equal 'Print_Page_Dx_Count_LegalB4Mono', parser.parse('710')
    assert_equal 'Print_Page_Dx_Count_LegalB4Color', parser.parse('711')
    assert_equal 'Print_Page_Dx_Count_4x6PostcardMono', parser.parse('712')
    assert_equal 'Print_Page_Dx_Count_4x6PostcardColor', parser.parse('713')
    assert_equal 'Print_Page_Dx_Count_A4Letter', parser.parse('898')
    assert_equal 'Print_Page_Dx_Count_A3Ledger', parser.parse('912')
    assert_equal 'Print_Page_Dx_Count_4x6Postcard', parser.parse('913')
    assert_equal 'Print_Page_Dx_Count_Other', parser.parse('999')
  end

  def test_br_print_pages_sxdx_papersize_papertype
    oid = MIBParser::ObjectId.new('1.3.6.1.4.1.2435.2.3.9.4.2.1.5.5.52.42.1.2.1')
    parser = MIBParser::Parser::CountType.new(oid)
    assert_equal 'Print_Page_SxDx_Count_A3Ledger_Regular', parser.parse('1')
    assert_equal 'Print_Page_SxDx_Count_A3Ledger_Inkjet', parser.parse('2')
    assert_equal 'Print_Page_SxDx_Count_A3Ledger_Glossy', parser.parse('3')
    assert_equal 'Print_Page_SxDx_Count_A4Letter_Regular', parser.parse('4')
    assert_equal 'Print_Page_SxDx_Count_A4Letter_Inkjet', parser.parse('5')
    assert_equal 'Print_Page_SxDx_Count_A4Letter_Glossy', parser.parse('6')
    assert_equal 'Print_Page_SxDx_Count_4x6Postcard_Regular', parser.parse('7')
    assert_equal 'Print_Page_SxDx_Count_4x6Postcard_Inkjet', parser.parse('8')
    assert_equal 'Print_Page_SxDx_Count_4x6Postcard_Glossy', parser.parse('9')
    assert_equal 'Print_Page_SxDx_Count_Other_Regular', parser.parse('10')
    assert_equal 'Print_Page_SxDx_Count_Other_Inkjet', parser.parse('11')
    assert_equal 'Print_Page_SxDx_Count_Other_Glossy', parser.parse('12')
  end
end
