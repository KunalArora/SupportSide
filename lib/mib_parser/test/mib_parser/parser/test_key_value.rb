require 'minitest_helper'

class TestParserKeyValue < Minitest::Test
  def test_empty
    oid = MIBParser::ObjectId.new('1.3.6.1.4.1.2435.2.4.3.2435.5.36.41.0')
    assert_equal 0, MIBParser::Parser::KeyValue.new(oid).parse('').size
  end

  def test_with_nil
    oid = MIBParser::ObjectId.new('1.3.6.1.4.1.2435.2.4.3.2435.5.36.41.0')
    assert_equal 0, MIBParser::Parser::KeyValue.new(oid).parse(nil).size
  end

  def test_newline_with_lf
    oid = MIBParser::ObjectId.new('1.3.6.1.4.1.2435.2.4.3.2435.5.36.41.0')
    assert_equal 2, MIBParser::Parser::KeyValue.new(oid).parse(%|K1="V1"\nK2="V2"\n|).size
    assert_equal 2, MIBParser::Parser::KeyValue.new(oid).parse(%|K1="V1"\nK2="V2"|).size
    assert_equal 2, MIBParser::Parser::KeyValue.new(oid).parse(%|\nK1="V1"\nK2="V2"\n|).size
  end

  def test_newline_with_crlf
    oid = MIBParser::ObjectId.new('1.3.6.1.4.1.2435.2.4.3.2435.5.36.41.0')
    assert_equal 2, MIBParser::Parser::KeyValue.new(oid).parse(%|K1="V1"\r\nK2="V2"\r\n|).size
    assert_equal 2, MIBParser::Parser::KeyValue.new(oid).parse(%|K1="V1"\r\nK2="V2"|).size
    assert_equal 2, MIBParser::Parser::KeyValue.new(oid).parse(%|\r\nK1="V1"\r\nK2="V2"\r\n|).size
  end

  def test_blfb_value
    oid = MIBParser::ObjectId.new('1.3.6.1.4.1.2435.2.4.3.2435.5.36.41.0')
    result = MIBParser::Parser::KeyValue.new(oid).parse(%|STATUS="DATAEND"\nLAS_MODEL_NAME="Brother MFC-8950DW"\nLAS_MACHINE_SN="000G01234567890"\nLAS_PCBM_SN="346000000141"\nLAS_FSR_SN="J00003831"\nLAS_SCN_SN="010000392"\nLAS_FBU_SN="FBHC1J000133A"\nLAS_COVERAGE="5.67%"\nLAS_COVERAGE_ACC="5.67%"\nLAS_COVERAGE_USING="5.67%"\nLAS_DRUM_COUNT="27434"\nLAS_DRUM_CHANGE_COUNT="0"\nLAS_DRUM_CHANGE_DATE="000000"\nLAS_DRUM_PAGE_COUNT="1828"\nLAS_NEXTCARE_DRUM="28172"\nLAS_TONER_CHANGE_COUNT="0"\nLAS_TONER_CHANGE_DATE="000000"\nLAS_TONER_PAGE_COUNT1="434"\nLAS_TONER_PAGE_COUNT2="0"\nLAS_TONER_REMAIN="0.00"\nLAS_PFKIT1_PAGE_COUNT="448"\nLAS_PFKIT1_CHANGE_COUNT="0"\nLAS_PFKIT1_CHANGE_DATE="000000"\nLAS_PFKITMP_PAGE_COUNT="0"\nLAS_PFKITMP_CHANGE_COUNT="0"\nLAS_PFKITMP_CHANGE_DATE="000000"\nLAS_FUSER_PAGE_COUNT="434"\nLAS_FUSER_CHANGE_COUNT="0"\nLAS_FUSER_CHANGE_DATE="000000"\nLAS_SCANNER_PAGE_COUNT="434"\nLAS_SCANNER_CHANGE_COUNT="0"\nLAS_SCANNER_CHANGE_DATE="000000"\nLAS_PAGECOUNT_TOTAL="434"\nLAS_PAGECOUNT_COPY="5"\nLAS_PAGECOUNT_PCPRINT="346"\nLAS_PAGECOUNT_LIST_FAX="83"\nLAS_PAGES_A4="434"\nLAS_PAGES_LETTER="434"\nLAS_PAGES_LEGAL="0"\nLAS_PAGES_EXECUTIVE="0"\nLAS_PAGES_ISOB5="0"\nLAS_PAGES_JISB5="0"\nLAS_PAGES_DL="0"\nLAS_PAGES_MONARC="0"\nLAS_PAGES_C5="0"\nLAS_PAGES_A5="0"\nLAS_PAGES_OTHER="0"\nLAS_PAGES_PLAIN="434"\nLAS_PAGES_THIN="434"\nLAS_PAGES_RECYCLED="434"\nLAS_PAGES_THICK="0"\nLAS_PAGES_THICKER="0"\nLAS_PAGES_BOND="0"\nLAS_PAGES_ENVELOPES="0"\nLAS_PAGES_ENVTHICK="0"\nLAS_PAGES_ENVTHIN="0"\nLAS_PAGES_HAGAKI="0"\nLAS_PAGES_LABEL="0"\nLAS_COUNTPAGE_PF1="448"\nLAS_COUNTPAGE_PF2="0"\nLAS_COUNTPAGE_PFMP="0"\nLAS_SCANPAGE_ADF="0"\nLAS_SCANPAGE_FB="90"\nLAS_JAMCOUNT="0"\nLAS_JAMCOUNTT1="0"\nLAS_JAMCOUNTT2="0"\nLAS_JAMCOUNTMP="0"\nLAS_JAMCOUNTINSIDE="0"\nLAS_JAMCOUNTREAR="0"\nLAS_JAMCOUNT_ADF="0"\nLAS_TOTALTIME_POWER_ON="305"\nLAS_POWER_ON_COUNT="728"\nLAS_ERRORHISTORY_PAGE_ME="1:9600:432, 2:E100:421, 3:9600:305, 4:E100:299, 5:9600:141, 6:E100:13, 7:9300:9, 8:E100:5, 9:9100:3, 10:"\nLAS_ERRORHISTORY_DATE_COMM="1:17070000:201301151435, 2:17070000:201301151423, 3:17070000:201301151346, "\n|)
    assert_equal 73, result.size
    assert_equal 'Brother MFC-8950DW', result['LAS_MODEL_NAME']
    assert_equal '000G01234567890', result['LAS_MACHINE_SN']
    assert_equal '346000000141', result['LAS_PCBM_SN']
    assert_equal 'J00003831', result['LAS_FSR_SN']
    assert_equal '010000392', result['LAS_SCN_SN']
    assert_equal 'FBHC1J000133A', result['LAS_FBU_SN']
    assert_equal '5.67%', result['LAS_COVERAGE']
    assert_equal '5.67%', result['LAS_COVERAGE_ACC']
    assert_equal '5.67%', result['LAS_COVERAGE_USING']
    assert_equal '27434', result['LAS_DRUM_COUNT']
    assert_equal '0', result['LAS_DRUM_CHANGE_COUNT']
    assert_equal '000000', result['LAS_DRUM_CHANGE_DATE']
    assert_equal '1828', result['LAS_DRUM_PAGE_COUNT']
    assert_equal '28172', result['LAS_NEXTCARE_DRUM']
    assert_equal '0', result['LAS_TONER_CHANGE_COUNT']
    assert_equal '000000', result['LAS_TONER_CHANGE_DATE']
    assert_equal '434', result['LAS_TONER_PAGE_COUNT1']
    assert_equal '0', result['LAS_TONER_PAGE_COUNT2']
    assert_equal '0.00', result['LAS_TONER_REMAIN']
    assert_equal '448', result['LAS_PFKIT1_PAGE_COUNT']
    assert_equal '0', result['LAS_PFKIT1_CHANGE_COUNT']
    assert_equal '000000', result['LAS_PFKIT1_CHANGE_DATE']
    assert_equal '0', result['LAS_PFKITMP_PAGE_COUNT']
    assert_equal '0', result['LAS_PFKITMP_CHANGE_COUNT']
    assert_equal '000000', result['LAS_PFKITMP_CHANGE_DATE']
    assert_equal '434', result['LAS_FUSER_PAGE_COUNT']
    assert_equal '0', result['LAS_FUSER_CHANGE_COUNT']
    assert_equal '000000', result['LAS_FUSER_CHANGE_DATE']
    assert_equal '434', result['LAS_SCANNER_PAGE_COUNT']
    assert_equal '0', result['LAS_SCANNER_CHANGE_COUNT']
    assert_equal '000000', result['LAS_SCANNER_CHANGE_DATE']
    assert_equal '434', result['LAS_PAGECOUNT_TOTAL']
    assert_equal '5', result['LAS_PAGECOUNT_COPY']
    assert_equal '346', result['LAS_PAGECOUNT_PCPRINT']
    assert_equal '83', result['LAS_PAGECOUNT_LIST_FAX']
    assert_equal '434', result['LAS_PAGES_A4']
    assert_equal '434', result['LAS_PAGES_LETTER']
    assert_equal '0', result['LAS_PAGES_LEGAL']
    assert_equal '0', result['LAS_PAGES_EXECUTIVE']
    assert_equal '0', result['LAS_PAGES_ISOB5']
    assert_equal '0', result['LAS_PAGES_JISB5']
    assert_equal '0', result['LAS_PAGES_DL']
    assert_equal '0', result['LAS_PAGES_MONARC']
    assert_equal '0', result['LAS_PAGES_C5']
    assert_equal '0', result['LAS_PAGES_A5']
    assert_equal '0', result['LAS_PAGES_OTHER']
    assert_equal '434', result['LAS_PAGES_PLAIN']
    assert_equal '434', result['LAS_PAGES_THIN']
    assert_equal '434', result['LAS_PAGES_RECYCLED']
    assert_equal '0', result['LAS_PAGES_THICK']
    assert_equal '0', result['LAS_PAGES_THICKER']
    assert_equal '0', result['LAS_PAGES_BOND']
    assert_equal '0', result['LAS_PAGES_ENVELOPES']
    assert_equal '0', result['LAS_PAGES_ENVTHICK']
    assert_equal '0', result['LAS_PAGES_ENVTHIN']
    assert_equal '0', result['LAS_PAGES_HAGAKI']
    assert_equal '0', result['LAS_PAGES_LABEL']
    assert_equal '448', result['LAS_COUNTPAGE_PF1']
    assert_equal '0', result['LAS_COUNTPAGE_PF2']
    assert_equal '0', result['LAS_COUNTPAGE_PFMP']
    assert_equal '0', result['LAS_SCANPAGE_ADF']
    assert_equal '90', result['LAS_SCANPAGE_FB']
    assert_equal '0', result['LAS_JAMCOUNT']
    assert_equal '0', result['LAS_JAMCOUNTT1']
    assert_equal '0', result['LAS_JAMCOUNTT2']
    assert_equal '0', result['LAS_JAMCOUNTMP']
    assert_equal '0', result['LAS_JAMCOUNTINSIDE']
    assert_equal '0', result['LAS_JAMCOUNTREAR']
    assert_equal '0', result['LAS_JAMCOUNT_ADF']
    assert_equal '305', result['LAS_TOTALTIME_POWER_ON']
    assert_equal '728', result['LAS_POWER_ON_COUNT']
    assert_equal '1:9600:432, 2:E100:421, 3:9600:305, 4:E100:299, 5:9600:141, 6:E100:13, 7:9300:9, 8:E100:5, 9:9100:3, 10:', result['LAS_ERRORHISTORY_PAGE_ME']
    assert_equal '1:17070000:201301151435, 2:17070000:201301151423, 3:17070000:201301151346, ', result['LAS_ERRORHISTORY_DATE_COMM']
  end

  def test_ink_1_value
    oid = MIBParser::ObjectId.new('1.3.6.1.4.1.2435.2.4.3.2435.5.36.41.0')
    result = MIBParser::Parser::KeyValue.new(oid).parse(%|STATUS=DATACNT\nINK_MODEL_NAME="8CA-R15-001"\nINK_COUNTRY_CODE="0001"\nINK_PROG_VER_BOOT_DATE="1111221745"\nINK_PROG_VER_BOOT_CHKSUM="AAFF"\nINK_MACHINE_SN="en109 234567890"\nINK_HEAD_BARCODE="ALR776FFFFFF7"\nINK_HEAD_VRANK="00"\nINK_CISTYPE_FB="01"\nINK_DOTCOUNT_BLACK="0"\nINK_DOTCOUNT_CYAN="0"\nINK_DOTCOUNT_MAGENTA="0"\nINK_DOTCOUNT_YELLOW="0"\nINK_DOTCOUNT_SNS_BLACK="0"\nINK_DOTCOUNT_SNS_CYAN="0"\nINK_DOTCOUNT_SNS_MAGENTA="0"\nINK_DOTCOUNT_SNS_YELLOW="0"\nINK_DOTCOUNT_PLATEN_BLACK="0"\nINK_DOTCOUNT_PLATEN_CYAN="0"\nINK_DOTCOUNT_PLATEN_MAGENTA="0"\nINK_DOTCOUNT_PLATEN_YELLOW="0"\nINK_HEADLIFE_COUNT_BLACK="0"\nINK_HEADLIFE_COUNT_CYAN="0"\nINK_HEADLIFE_COUNT_MAGENTA="0"\nINK_HEADLIFE_COUNT_YELLOW="0"\nINK_CARTCHG_COUNT_BLACK="0"\nINK_CARTCHG_COUNT_CYAN="0"\nINK_CARTCHG_COUNT_MAGENTA="0"\nINK_CARTCHG_COUNT_YELLOW="0"\nINK_CARTCHG_COUNT_BLACK2="4"\nINK_CARTCHG_COUNT_CYAN2="4"\nINK_CARTCHG_COUNT_MAGENTA2="4"\nINK_CARTCHG_COUNT_YELLOW2="5"\nINK_CARTCHG_COUNT_BLACK3="0"\nINK_CARTCHG_COUNT_CYAN3="0"\nINK_CARTCHG_COUNT_MAGENTA3="0"\nINK_CARTCHG_COUNT_YELLOW3="0"\nINK_CARTCHG_COUNT_BLACK4="0"\nINK_CARTCHG_COUNT_CYAN4="0"\nINK_CARTCHG_COUNT_MAGENTA4="0"\nINK_CARTCHG_COUNT_YELLOW4="0"\nINK_CHANGE_ERROR_BLACK="2"\nINK_CHANGE_ERROR_CYAN="2"\nINK_CHANGE_ERROR_MAGENTA="2"\nINK_CHANGE_ERROR_YELLOW="2"\nINK_PAGECOUNT_TOTAL="0"\nINK_JAMCOUNT="0"\nINK_SIZECOUNT_ALL_BLACK="0"\nINK_SIZECOUNT_ALL_COLOR="0"\nINK_SIZECOUNT_A3_BLACK="0"\nINK_SIZECOUNT_A3_COLOR="0"\nINK_SIZECOUNT_OTHER_BLACK="0"\nINK_SIZECOUNT_OTHER_COLOR="0"\nINK_COUNTPAGE_DX="0"\nINK_JAMCOUNT_DX="0"\nINK_DX_ROLLER_CLEANING="0"\nINK_PAGECOUNT_COPY_ALL="0"\nINK_PAGECOUNT_COPY_BLACK="0"\nINK_PAGECOUNT_COPY_COLOR="0"\nINK_PAGECOUNT_PCPRINT="0"\nINK_PAGECOUNT_PCPRINT_BLACK="0"\nINK_PAGECOUNT_PCPRINT_COLOR="0"\nINK_PAGECOUNT_MEDIACARD="0"\nINK_PAGECOUNT_TESTPRINT="0"\nINK_PAGECOUNT_LIST_FAX="0"\nINK_PAGECOUNT_LIST_FAX_BLACK="0"\nINK_PAGECOUNT_LIST_FAX_COLOR="0"\nINK_PAGECOUNT_MANFEED_TOTAL="0"\nINK_PAGECOUNT_MANFEED_JAM="0"\nINK_SCANPAGE_FB="0"\nINK_SCANPAGE_ADF="0"\nINK_JAMCOUNT_ADF="0"\nINK_SCANPAGE_FAX="0"\nINK_SCANPAGE_SCANNER="0"\nINK_SCAN_HP_ERR="00"\nINK_SCAN_ERR_LOG_WTAPE_01="00"\nINK_SCAN_ERR_LOG_WTAPE_02="00"\nINK_SCAN_ERR_LOG_WTAPE_03="00"\nINK_SCAN_ERR_LOG_WTAPE_04="00"\nINK_SCAN_ERR_LOG_WTAPE_05="00"\nINK_SCAN_ERR_LOG_WTAPE_06="00"\nINK_SCAN_ERR_LOG_WTAPE_07="00"\nINK_SCAN_ERR_LOG_WTAPE_08="00"\nINK_SCAN_ERR_LOG_WTAPE_09="00"\nINK_SCAN_ERR_LOG_WTAPE_10="00"\nINK_SCAN_ERR_LOG_WTAPE_11="00"\nINK_SCAN_ERR_LOG_WTAPE_12="00"\nINK_SCAN_ERR_LOG_WTAPE_13="00"\nINK_SCAN_ERR_LOG_WTAPE_14="00"\nINK_SCAN_ERR_LOG_WTAPE_15="00"\nINK_SCAN_ERR_LOG_WTAPE_16="00"\nINK_PURGEWASTE_COUNT="1275"\nINK_PURGESENSOR_COUNT="0"\nINK_WIPEHEAD_COUNT="26"\nINK_FLUSHWASTE_COUNT_BLACK="0"\nINK_FLUSHWASTE_COUNT_COLOR="0"\nINK_PURGE_TIMES_EIP_AUTO_BLACK="0"\nINK_PURGE_TIMES_EIP_MANU_BLACK="1"\nINK_PURGE_TIMES_UIP_AUTO_BLACK="0"\nINK_PURGE_TIMES_UIP_MANU_BLACK="0"\nINK_PURGE_TIMES_RP__AUTO_BLACK="7"\nINK_PURGE_TIMES_RP__MANU_BLACK="0"\nINK_PURGE_TIMES_SRP_AUTO_BLACK="0"\nINK_PURGE_TIMES_SRP_MANU_BLACK="0"\nINK_PURGE_TIMES_SP__AUTO_BLACK="0"\nINK_PURGE_TIMES_SP__MANU_BLACK="0"\nINK_PURGE_TIMES_RP2_AUTO_BLACK="0"\nINK_PURGE_TIMES_RP2_MANU_BLACK="0"\nINK_PURGE_TIMES_CP__AUTO_BLACK="0"\nINK_PURGE_TIMES_CP__MANU_BLACK="0"\nINK_PURGE_TIMES_NP__AUTO_BLACK="0"\nINK_PURGE_TIMES_NP__MANU_BLACK="0"\nINK_PURGE_TIMES_RP3_AUTO_BLACK="0"\nINK_PURGE_TIMES_RP3_MANU_BLACK="0"\nINK_PURGE_TIMES_PP__AUTO_BLACK="0"\nINK_PURGE_TIMES_PP__MANU_BLACK="0"\nINK_PURGE_TIMES_QPP_AUTO_BLACK="0"\nINK_PURGE_TIMES_QPP_MANU_BLACK="0"\nINK_PURGE_TIMES_EIP_AUTO_COLOR="0"\nINK_PURGE_TIMES_EIP_MANU_COLOR="1"\nINK_PURGE_TIMES_UIP_AUTO_COLOR="0"\nINK_PURGE_TIMES_UIP_MANU_COLOR="0"\nINK_PURGE_TIMES_RP__AUTO_COLOR="7"\nINK_PURGE_TIMES_RP__MANU_COLOR="0"\nINK_PURGE_TIMES_SRP_AUTO_COLOR="0"\nINK_PURGE_TIMES_SRP_MANU_COLOR="0"\nINK_PURGE_TIMES_SP__AUTO_COLOR="0"\nINK_PURGE_TIMES_SP__MANU_COLOR="0"\nINK_PURGE_TIMES_RP2_AUTO_COLOR="0"\n"|)
    assert_equal 128, result.size
    assert_equal '8CA-R15-001', result['INK_MODEL_NAME']
    assert_equal '0001', result['INK_COUNTRY_CODE']
    assert_equal '1111221745', result['INK_PROG_VER_BOOT_DATE']
    assert_equal 'AAFF', result['INK_PROG_VER_BOOT_CHKSUM']
    assert_equal 'en109 234567890', result['INK_MACHINE_SN']
    assert_equal 'ALR776FFFFFF7', result['INK_HEAD_BARCODE']
    assert_equal '00', result['INK_HEAD_VRANK']
    assert_equal '01', result['INK_CISTYPE_FB']
    assert_equal '0', result['INK_DOTCOUNT_BLACK']
    assert_equal '0', result['INK_DOTCOUNT_CYAN']
    assert_equal '0', result['INK_DOTCOUNT_MAGENTA']
    assert_equal '0', result['INK_DOTCOUNT_YELLOW']
    assert_equal '0', result['INK_DOTCOUNT_SNS_BLACK']
    assert_equal '0', result['INK_DOTCOUNT_SNS_CYAN']
    assert_equal '0', result['INK_DOTCOUNT_SNS_MAGENTA']
    assert_equal '0', result['INK_DOTCOUNT_SNS_YELLOW']
    assert_equal '0', result['INK_DOTCOUNT_PLATEN_BLACK']
    assert_equal '0', result['INK_DOTCOUNT_PLATEN_CYAN']
    assert_equal '0', result['INK_DOTCOUNT_PLATEN_MAGENTA']
    assert_equal '0', result['INK_DOTCOUNT_PLATEN_YELLOW']
    assert_equal '0', result['INK_HEADLIFE_COUNT_BLACK']
    assert_equal '0', result['INK_HEADLIFE_COUNT_CYAN']
    assert_equal '0', result['INK_HEADLIFE_COUNT_MAGENTA']
    assert_equal '0', result['INK_HEADLIFE_COUNT_YELLOW']
    assert_equal '0', result['INK_CARTCHG_COUNT_BLACK']
    assert_equal '0', result['INK_CARTCHG_COUNT_CYAN']
    assert_equal '0', result['INK_CARTCHG_COUNT_MAGENTA']
    assert_equal '0', result['INK_CARTCHG_COUNT_YELLOW']
    assert_equal '4', result['INK_CARTCHG_COUNT_BLACK2']
    assert_equal '4', result['INK_CARTCHG_COUNT_CYAN2']
    assert_equal '4', result['INK_CARTCHG_COUNT_MAGENTA2']
    assert_equal '5', result['INK_CARTCHG_COUNT_YELLOW2']
    assert_equal '0', result['INK_CARTCHG_COUNT_BLACK3']
    assert_equal '0', result['INK_CARTCHG_COUNT_CYAN3']
    assert_equal '0', result['INK_CARTCHG_COUNT_MAGENTA3']
    assert_equal '0', result['INK_CARTCHG_COUNT_YELLOW3']
    assert_equal '0', result['INK_CARTCHG_COUNT_BLACK4']
    assert_equal '0', result['INK_CARTCHG_COUNT_CYAN4']
    assert_equal '0', result['INK_CARTCHG_COUNT_MAGENTA4']
    assert_equal '0', result['INK_CARTCHG_COUNT_YELLOW4']
    assert_equal '2', result['INK_CHANGE_ERROR_BLACK']
    assert_equal '2', result['INK_CHANGE_ERROR_CYAN']
    assert_equal '2', result['INK_CHANGE_ERROR_MAGENTA']
    assert_equal '2', result['INK_CHANGE_ERROR_YELLOW']
    assert_equal '0', result['INK_PAGECOUNT_TOTAL']
    assert_equal '0', result['INK_JAMCOUNT']
    assert_equal '0', result['INK_DX_ROLLER_CLEANING']
    assert_equal '0', result['INK_PAGECOUNT_COPY_ALL']
    assert_equal '0', result['INK_PAGECOUNT_COPY_BLACK']
    assert_equal '0', result['INK_PAGECOUNT_COPY_COLOR']
    assert_equal '0', result['INK_PAGECOUNT_PCPRINT']
    assert_equal '0', result['INK_PAGECOUNT_PCPRINT_BLACK']
    assert_equal '0', result['INK_PAGECOUNT_PCPRINT_COLOR']
    assert_equal '0', result['INK_PAGECOUNT_MEDIACARD']
    assert_equal '0', result['INK_PAGECOUNT_TESTPRINT']
    assert_equal '0', result['INK_PAGECOUNT_LIST_FAX']
    assert_equal '0', result['INK_PAGECOUNT_LIST_FAX_BLACK']
    assert_equal '0', result['INK_PAGECOUNT_LIST_FAX_COLOR']
    assert_equal '0', result['INK_PAGECOUNT_MANFEED_TOTAL']
    assert_equal '0', result['INK_PAGECOUNT_MANFEED_JAM']
    assert_equal '0', result['INK_JAMCOUNT_ADF']
    assert_equal '0', result['INK_SCANPAGE_FB']
    assert_equal '0', result['INK_SCANPAGE_ADF']
    assert_equal '0', result['INK_SCANPAGE_FAX']
    assert_equal '0', result['INK_SCANPAGE_SCANNER']
    assert_equal '00', result['INK_SCAN_HP_ERR']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_01']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_02']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_03']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_04']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_05']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_06']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_07']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_08']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_09']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_10']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_11']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_12']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_13']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_14']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_15']
    assert_equal '00', result['INK_SCAN_ERR_LOG_WTAPE_16']
    assert_equal '1275', result['INK_PURGEWASTE_COUNT']
    assert_equal '0', result['INK_PURGESENSOR_COUNT']
    assert_equal '26', result['INK_WIPEHEAD_COUNT']
    assert_equal '0', result['INK_FLUSHWASTE_COUNT_BLACK']
    assert_equal '0', result['INK_FLUSHWASTE_COUNT_COLOR']
    assert_equal '0', result['INK_PURGE_TIMES_EIP_AUTO_BLACK']
    assert_equal '1', result['INK_PURGE_TIMES_EIP_MANU_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_UIP_AUTO_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_UIP_MANU_BLACK']
    assert_equal '7', result['INK_PURGE_TIMES_RP__AUTO_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_RP__MANU_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_SRP_AUTO_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_SRP_MANU_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_SP__AUTO_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_SP__MANU_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_RP2_AUTO_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_RP2_MANU_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_CP__AUTO_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_CP__MANU_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_NP__AUTO_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_NP__MANU_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_RP3_AUTO_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_RP3_MANU_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_PP__AUTO_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_PP__MANU_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_QPP_AUTO_BLACK']
    assert_equal '0', result['INK_PURGE_TIMES_QPP_MANU_BLACK']
  end

  def test_ink_2_value
    oid = MIBParser::ObjectId.new('1.3.6.1.4.1.2435.2.4.3.2435.5.36.41.0')
    result = MIBParser::Parser::KeyValue.new(oid).parse(%|STATUS=DATAEND\nINK_PURGE_TIMES_RP2_MANU_COLOR="0"\nINK_PURGE_TIMES_CP__AUTO_COLOR="0"\nINK_PURGE_TIMES_CP__MANU_COLOR="0"\nINK_PURGE_TIMES_NP__AUTO_COLOR="0"\nINK_PURGE_TIMES_NP__MANU_COLOR="0"\nINK_PURGE_TIMES_RP3_AUTO_COLOR="0"\nINK_PURGE_TIMES_RP3_MANU_COLOR="0"\nINK_PURGE_TIMES_PP__AUTO_COLOR="0"\nINK_PURGE_TIMES_PP__MANU_COLOR="0"\nINK_PURGE_TIMES_QPP_AUTO_COLOR="0"\nINK_PURGE_TIMES_QPP_MANU_COLOR="0"\nINK_PURGE_TIMES_TFL_AUTO="3"\nINK_PAGES_A3_PLAIN="0"\nINK_PAGES_A3_INKJET="0"\nINK_PAGES_A3_GLOSSY="0"\nINK_PAGES_A4_PLAIN="0"\nINK_PAGES_A4_INKJET="0"\nINK_PAGES_A4_GLOSSY="0"\nINK_PAGES_CARD_PLAIN="0"\nINK_PAGES_CARD_INKJET="0"\nINK_PAGES_CARD_GLOSSY="0"\nINK_PAGES_L_PLAIN="0"\nINK_PAGES_L_INKJET="0"\nINK_PAGES_L_GLOSSY="0"\nINK_TOTALTIME_POWER_ON="586"\nINK_TOTALCOUNT_POWER_ON="478"\nINK_ERRORHISTORY_ME="A1:1201010000:24,23:1201010000:22,22:1201010000:22,21:1201010000:22,20:1201010000:22,23:1112091658:26,22:1112091658:26,21:1112091658:26,20:1112091658:26"\nINK_ERRORHISTORY_COMM="00000000:,00000000:,00000000:"\nINK_INITPURGE_STATUS="00"\nINK_INITPURGE_KIND="0000"\nINK_INITPURGE_COLOR="0F"\nINK_INITPURGE_EXE="00"\nINK_INITPURGE_SEQUENCE="00"\nINK_INITPURGE_THM="00"\nINK_INITPURGE_LOOP="00"\nINK_INITPURGE_LOOPKIND="0000"\nINK_INITPURGE_PASSTIME="0000/0000/0000/0000/0000/0000/0000/0000/0000/0000"\nINK_DX_MONOCPY_CNT="0"\nINK_DX_COLORCPY_CNT="0"\nINK_DX_PCPRINT_CNT="0"\nINK_DX_PAPER_A3_PLAIN="0"\nINK_DX_PAPER_A4_PLAIN="0"\nINK_DX_PAPER_46_PLAIN="0"\nINK_DX_PAPER_46_INKJET="0"\nINK_DX_PAPER_46_GLOSSY="0"\nINK_SENSOR_STATUS_DF="1"\nINK_SENSOR_STATUS_DR="1"\nINK_SENSOR_STATUS_CV="1"\nINK_SENSOR_STATUS_RS="1"\nINK_SENSOR_STATUS_CC="1"\nINK_SENSOR_STATUS_P1="0"\nINK_SENSOR_STATUS_AC="1"\nINK_SENSOR_STATUS_IK="1"\nINK_SENSOR_STATUS_IY="1"\nINK_SENSOR_STATUS_IC="1"\nINK_SENSOR_STATUS_IM="1"\nINK_SENSOR_STATUS_EK="1"\nINK_SENSOR_STATUS_EY="1"\nINK_SENSOR_STATUS_EC="1"\nINK_SENSOR_STATUS_EM="1"\nINK_SENSOR_STATUS_OR="-"\nINK_SENSOR_STATUS_CD="-"\nINK_SENSOR_STATUS_PP="0"\nINK_SENSOR_STATUS_HF="1"\nINK_SENSOR_STATUS_A3="-"\nINK_SENSOR_STATUS_B4="-"\nINK_SENSOR_STATUS_RB="-"\nINK_SENSOR_STATUS_FC="-"\nINK_SENSOR_STATUS_VT="1"\nINK_SENSOR_STATUS_HK="-"\nINK_SENSOR_STATUS_T1="1"\nINK_CARTRIDGE_TYPE_K="2"\nINK_CARTRIDGE_TYPE_Y="2"\nINK_CARTRIDGE_TYPE_C="2"\nINK_CARTRIDGE_TYPE_M="2"\nINK_RESET_HISTORY_NUM="255"\nINK_RESET_HISTORY_TIME="16777215"\n|)
    assert_equal 77, result.size
    assert_equal '0', result['INK_PURGE_TIMES_RP2_MANU_COLOR']
    assert_equal '0', result['INK_PURGE_TIMES_CP__AUTO_COLOR']
    assert_equal '0', result['INK_PURGE_TIMES_CP__MANU_COLOR']
    assert_equal '0', result['INK_PURGE_TIMES_NP__AUTO_COLOR']
    assert_equal '0', result['INK_PURGE_TIMES_NP__MANU_COLOR']
    assert_equal '0', result['INK_PURGE_TIMES_RP3_MANU_COLOR']
    assert_equal '0', result['INK_PURGE_TIMES_RP3_AUTO_COLOR']
    assert_equal '0', result['INK_PURGE_TIMES_PP__AUTO_COLOR']
    assert_equal '0', result['INK_PURGE_TIMES_PP__MANU_COLOR']
    assert_equal '0', result['INK_PURGE_TIMES_QPP_AUTO_COLOR']
    assert_equal '0', result['INK_PURGE_TIMES_QPP_MANU_COLOR']
    assert_equal '3', result['INK_PURGE_TIMES_TFL_AUTO']
    assert_equal '0', result['INK_PAGES_A3_PLAIN']
    assert_equal '0', result['INK_PAGES_A3_INKJET']
    assert_equal '0', result['INK_PAGES_A3_GLOSSY']
    assert_equal '0', result['INK_PAGES_A4_PLAIN']
    assert_equal '0', result['INK_PAGES_A4_INKJET']
    assert_equal '0', result['INK_PAGES_A4_GLOSSY']
    assert_equal '0', result['INK_PAGES_CARD_PLAIN']
    assert_equal '0', result['INK_PAGES_CARD_INKJET']
    assert_equal '0', result['INK_PAGES_CARD_GLOSSY']
    assert_equal '0', result['INK_PAGES_L_PLAIN']
    assert_equal '0', result['INK_PAGES_L_INKJET']
    assert_equal '0', result['INK_PAGES_L_GLOSSY']
    assert_equal '586', result['INK_TOTALTIME_POWER_ON']
    assert_equal '478', result['INK_TOTALCOUNT_POWER_ON']
    assert_equal 'A1:1201010000:24,23:1201010000:22,22:1201010000:22,21:1201010000:22,20:1201010000:22,23:1112091658:26,22:1112091658:26,21:1112091658:26,20:1112091658:26', result['INK_ERRORHISTORY_ME']
    assert_equal '00000000:,00000000:,00000000:', result['INK_ERRORHISTORY_COMM']
    assert_equal '00', result['INK_INITPURGE_STATUS']
    assert_equal '0000', result['INK_INITPURGE_KIND']
    assert_equal '0F', result['INK_INITPURGE_COLOR']
    assert_equal '00', result['INK_INITPURGE_EXE']
    assert_equal '00', result['INK_INITPURGE_SEQUENCE']
    assert_equal '00', result['INK_INITPURGE_THM']
    assert_equal '00', result['INK_INITPURGE_LOOP']
    assert_equal '0000', result['INK_INITPURGE_LOOPKIND']
    assert_equal '0000/0000/0000/0000/0000/0000/0000/0000/0000/0000', result['INK_INITPURGE_PASSTIME']
    assert_equal '0', result['INK_DX_MONOCPY_CNT']
    assert_equal '0', result['INK_DX_COLORCPY_CNT']
    assert_equal '0', result['INK_DX_PCPRINT_CNT']
    assert_equal '0', result['INK_DX_PAPER_A3_PLAIN']
    assert_equal '0', result['INK_DX_PAPER_A4_PLAIN']
    assert_equal '0', result['INK_DX_PAPER_46_PLAIN']
    assert_equal '0', result['INK_DX_PAPER_46_INKJET']
    assert_equal '0', result['INK_DX_PAPER_46_GLOSSY']
    assert_equal '1', result['INK_SENSOR_STATUS_DF']
    assert_equal '1', result['INK_SENSOR_STATUS_DR']
    assert_equal '1', result['INK_SENSOR_STATUS_CV']
    assert_equal '1', result['INK_SENSOR_STATUS_RS']
    assert_equal '1', result['INK_SENSOR_STATUS_CC']
    assert_equal '0', result['INK_SENSOR_STATUS_P1']
    assert_equal '1', result['INK_SENSOR_STATUS_AC']
    assert_equal '1', result['INK_SENSOR_STATUS_IK']
    assert_equal '1', result['INK_SENSOR_STATUS_IY']
    assert_equal '1', result['INK_SENSOR_STATUS_IC']
    assert_equal '1', result['INK_SENSOR_STATUS_IM']
    assert_equal '1', result['INK_SENSOR_STATUS_EK']
    assert_equal '1', result['INK_SENSOR_STATUS_EY']
    assert_equal '1', result['INK_SENSOR_STATUS_EC']
    assert_equal '1', result['INK_SENSOR_STATUS_EM']
    assert_equal '-', result['INK_SENSOR_STATUS_OR']
    assert_equal '-', result['INK_SENSOR_STATUS_CD']
    assert_equal '0', result['INK_SENSOR_STATUS_PP']
    assert_equal '1', result['INK_SENSOR_STATUS_HF']
    assert_equal '-', result['INK_SENSOR_STATUS_A3']
    assert_equal '-', result['INK_SENSOR_STATUS_B4']
    assert_equal '-', result['INK_SENSOR_STATUS_RB']
    assert_equal '-', result['INK_SENSOR_STATUS_FC']
    assert_equal '1', result['INK_SENSOR_STATUS_VT']
    assert_equal '-', result['INK_SENSOR_STATUS_HK']
    assert_equal '1', result['INK_SENSOR_STATUS_T1']
    assert_equal '2', result['INK_CARTRIDGE_TYPE_K']
    assert_equal '2', result['INK_CARTRIDGE_TYPE_Y']
    assert_equal '2', result['INK_CARTRIDGE_TYPE_C']
    assert_equal '2', result['INK_CARTRIDGE_TYPE_M']
    assert_equal '255', result['INK_RESET_HISTORY_NUM']
    assert_equal '16777215', result['INK_RESET_HISTORY_TIME']
  end
end
